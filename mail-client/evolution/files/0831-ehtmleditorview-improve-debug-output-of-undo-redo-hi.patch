From 0a5ff4df6c9f61ef0a16656a3468a884a83ca89b Mon Sep 17 00:00:00 2001
From: Tomas Popela <tpopela@redhat.com>
Date: Thu, 25 Feb 2016 19:34:46 +0100
Subject: [PATCH 0831/1800] EHTMLEditorView - Improve debug output of undo/redo
 history events

---
 .../composer/e-html-editor-undo-redo-manager.c     | 52 +++++++++++-----------
 1 file changed, 26 insertions(+), 26 deletions(-)

diff --git a/web-extensions/composer/e-html-editor-undo-redo-manager.c b/web-extensions/composer/e-html-editor-undo-redo-manager.c
index 891db5f25a..a76eee2413 100644
--- a/web-extensions/composer/e-html-editor-undo-redo-manager.c
+++ b/web-extensions/composer/e-html-editor-undo-redo-manager.c
@@ -186,7 +186,7 @@ print_node_inner_html (WebKitDOMNode *node)
 	gchar *inner_html;
 
 	if (!node) {
-		printf ("\tnone\n");
+		printf ("    none\n");
 		return;
 	}
 	document = webkit_dom_node_get_owner_document (node);
@@ -199,7 +199,7 @@ print_node_inner_html (WebKitDOMNode *node)
 	inner_html = webkit_dom_element_get_inner_html (div);
 	remove_node (WEBKIT_DOM_NODE (div));
 
-	printf ("\t'%s'\n", inner_html);
+	printf ("    '%s'\n", inner_html);
 
 	g_free (inner_html);
 }
@@ -208,9 +208,11 @@ static void
 print_history_event (EHTMLEditorHistoryEvent *event)
 {
 	if (event->type != HISTORY_START && event->type != HISTORY_AND) {
-		printf ("HISTORY EVENT: %d ; \n", event->type);
-		printf ("\t before: start_x: %u ; start_y: %u ; end_x: %u ; end_y: %u ;\n", event->before.start.x, event->before.start.y, event->before.end.x, event->before.end.y);
-		printf ("\t after: start_x: %u ; start_y: %u ; end_x: %u ; end_y: %u ;\n", event->after.start.x, event->after.start.y, event->after.end.x, event->after.end.y);
+		printf ("  HISTORY EVENT: %d ; \n", event->type);
+		printf ("    before: start_x: %u ; start_y: %u ; end_x: %u ; end_y: %u ;\n",
+			event->before.start.x, event->before.start.y, event->before.end.x, event->before.end.y);
+		printf ("    after:  start_x: %u ; start_y: %u ; end_x: %u ; end_y: %u ;\n",
+			event->after.start.x, event->after.start.y, event->after.end.x, event->after.end.y);
 	}
 	switch (event->type) {
 		case HISTORY_DELETE:
@@ -232,13 +234,13 @@ print_history_event (EHTMLEditorHistoryEvent *event)
 		case HISTORY_UNDERLINE:
 		case HISTORY_STRIKETHROUGH:
 		case HISTORY_WRAP:
-			printf (" from %d to %d ;\n", event->data.style.from, event->data.style.to);
+			printf ("    from %d to %d ;\n", event->data.style.from, event->data.style.to);
 			break;
 		case HISTORY_PASTE:
 		case HISTORY_PASTE_AS_TEXT:
 		case HISTORY_PASTE_QUOTED:
 		case HISTORY_INSERT_HTML:
-			printf (" pasting: '%s' ; \n", event->data.string.to);
+			printf ("    pasting: '%s' ; \n", event->data.string.to);
 			break;
 		case HISTORY_HRULE_DIALOG:
 		case HISTORY_IMAGE_DIALOG:
@@ -253,30 +255,28 @@ print_history_event (EHTMLEditorHistoryEvent *event)
 		case HISTORY_FONT_COLOR:
 		case HISTORY_REPLACE:
 		case HISTORY_REPLACE_ALL:
-			printf (" from '%s' to '%s';\n", event->data.string.from, event->data.string.to);
+			printf ("    from '%s' to '%s';\n", event->data.string.from, event->data.string.to);
 			break;
 		case HISTORY_START:
-			printf ("HISTORY START\n");
+			printf ("  HISTORY START\n");
 			break;
 		case HISTORY_AND:
-			printf ("HISTORY AND\n");
+			printf ("  HISTORY AND\n");
 			break;
 		default:
-			printf ("Unknown history type\n");
+			printf ("  Unknown history type\n");
 	}
 }
 
 static void
 print_history (EHTMLEditorUndoRedoManager *manager)
 {
+	printf ("-------------------\nWHOLE HISTORY STACK\n");
 	if (manager->priv->history) {
-		printf ("\n");
 		g_list_foreach (
 			manager->priv->history, (GFunc) print_history_event, NULL);
-		printf ("\n");
-	} else {
-		printf ("History empty!\n");
 	}
+	printf ("-------------------\n");
 }
 
 static void
@@ -284,9 +284,9 @@ print_undo_events (EHTMLEditorUndoRedoManager *manager)
 {
 	GList *item = manager->priv->history;
 
-	printf ("UNDO EVENTS:\n");
+	printf ("------------------\nUNDO HISTORY STACK\n");
 	if (!item || !item->next) {
-		printf ("EMPTY\n");
+		printf ("------------------\n");
 		return;
 	}
 
@@ -297,8 +297,7 @@ print_undo_events (EHTMLEditorUndoRedoManager *manager)
 		item = item->next;
 	}
 
-	printf ("\n");
-
+	printf ("------------------\n");
 }
 
 static void
@@ -306,9 +305,9 @@ print_redo_events (EHTMLEditorUndoRedoManager *manager)
 {
 	GList *item = manager->priv->history;
 
-	printf ("REDO EVENTS:\n");
+	printf ("------------------\nREDO HISTORY STACK\n");
 	if (!item || !item->prev) {
-		printf ("EMPTY\n");
+		printf ("------------------\n");
 		return;
 	}
 
@@ -318,7 +317,7 @@ print_redo_events (EHTMLEditorUndoRedoManager *manager)
 		item = item->prev;
 	}
 
-	printf ("\n");
+	printf ("------------------\n");
 }
 #endif
 
@@ -1745,8 +1744,7 @@ e_html_editor_undo_redo_manager_insert_history_event (EHTMLEditorUndoRedoManager
 	manager->priv->history_size++;
 	manager->priv->can_undo = TRUE;
 
-	d (print_undo_events (manager));
-	d (print_redo_events (manager));
+	d (print_history (view));
 
 	g_object_notify (G_OBJECT (manager), "can-undo");
 }
@@ -1871,6 +1869,7 @@ e_html_editor_undo_redo_manager_undo (EHTMLEditorUndoRedoManager *manager)
 	history = manager->priv->history;
 	event = history->data;
 
+	d (printf ("\nUNDOING EVENT:\n"));
 	d (print_history_event (event));
 
 	manager->priv->operation_in_progress = TRUE;
@@ -1977,7 +1976,7 @@ e_html_editor_undo_redo_manager_undo (EHTMLEditorUndoRedoManager *manager)
 	if (history->next)
 		manager->priv->history = manager->priv->history->next;
 
-	d (print_history (manager));
+	d (print_undo_events (manager));
 /* FIXME WK2
 	html_editor_view_user_changed_contents_cb (view);*/
 
@@ -2011,6 +2010,7 @@ e_html_editor_undo_redo_manager_redo (EHTMLEditorUndoRedoManager *manager)
 	history = manager->priv->history;
 	event = history->prev->data;
 
+	d (printf ("\nREDOING EVENT:\n"));
 	d (print_history_event (event));
 
 	document = manager->priv->document;
@@ -2122,7 +2122,7 @@ e_html_editor_undo_redo_manager_redo (EHTMLEditorUndoRedoManager *manager)
 
 	manager->priv->history = manager->priv->history->prev;
 
-	d (print_history (manager));
+	d (print_redo_events (manager));
 /* FIXME WK2
 	html_editor_view_user_changed_contents_cb (view);*/
 
-- 
2.15.0

