From 2513cd41fe75479c8ad8aeb9350e8385c19f38f8 Mon Sep 17 00:00:00 2001
From: Milan Crha <mcrha@redhat.com>
Date: Tue, 24 Mar 2015 07:26:51 +0100
Subject: [PATCH 0571/1800] Bug 744718 - Provide backend specific extensions as
 public

---
 modules/book-config-ldap/Makefile.am               |   4 +-
 modules/book-config-ldap/e-source-ldap.c           | 688 ---------------------
 modules/book-config-ldap/e-source-ldap.h           | 122 ----
 .../book-config-ldap/evolution-book-config-ldap.c  |   4 +-
 modules/cal-config-contacts/Makefile.am            |   4 +-
 modules/cal-config-contacts/e-contacts-selector.c  |   8 +-
 modules/cal-config-contacts/e-source-contacts.c    | 171 -----
 modules/cal-config-contacts/e-source-contacts.h    |  69 ---
 .../evolution-cal-config-contacts.c                |   3 +-
 modules/cal-config-local/Makefile.am               |   4 +-
 modules/cal-config-local/e-source-local.c          | 202 ------
 modules/cal-config-local/e-source-local.h          |  68 --
 .../cal-config-local/evolution-cal-config-local.c  |   4 +-
 modules/cal-config-weather/Makefile.am             |   4 +-
 modules/cal-config-weather/e-source-weather.c      | 260 --------
 modules/cal-config-weather/e-source-weather.h      |  83 ---
 .../evolution-cal-config-weather.c                 |   4 +-
 17 files changed, 14 insertions(+), 1688 deletions(-)
 delete mode 100644 modules/book-config-ldap/e-source-ldap.c
 delete mode 100644 modules/book-config-ldap/e-source-ldap.h
 delete mode 100644 modules/cal-config-contacts/e-source-contacts.c
 delete mode 100644 modules/cal-config-contacts/e-source-contacts.h
 delete mode 100644 modules/cal-config-local/e-source-local.c
 delete mode 100644 modules/cal-config-local/e-source-local.h
 delete mode 100644 modules/cal-config-weather/e-source-weather.c
 delete mode 100644 modules/cal-config-weather/e-source-weather.h

diff --git a/modules/book-config-ldap/Makefile.am b/modules/book-config-ldap/Makefile.am
index 7f73e4ca16..8251c73aec 100644
--- a/modules/book-config-ldap/Makefile.am
+++ b/modules/book-config-ldap/Makefile.am
@@ -11,9 +11,7 @@ module_book_config_ldap_la_CPPFLAGS = \
 	$(NULL)
 
 module_book_config_ldap_la_SOURCES = \
-	evolution-book-config-ldap.c				\
-	e-source-ldap.c						\
-	e-source-ldap.h
+	evolution-book-config-ldap.c
 
 module_book_config_ldap_la_LIBADD = \
 	$(top_builddir)/e-util/libevolution-util.la		\
diff --git a/modules/book-config-ldap/e-source-ldap.c b/modules/book-config-ldap/e-source-ldap.c
deleted file mode 100644
index 0aa81268cc..0000000000
--- a/modules/book-config-ldap/e-source-ldap.c
+++ /dev/null
@@ -1,688 +0,0 @@
-/*
- * e-source-ldap.c
- *
- * This program is free software; you can redistribute it and/or modify it
- * under the terms of the GNU Lesser General Public License as published by
- * the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful, but
- * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
- * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
- * for more details.
- *
- * You should have received a copy of the GNU Lesser General Public License
- * along with this program; if not, see <http://www.gnu.org/licenses/>.
- *
- */
-
-#include "e-source-ldap.h"
-
-#include <ldap.h>
-
-#define E_SOURCE_LDAP_GET_PRIVATE(obj) \
-	(G_TYPE_INSTANCE_GET_PRIVATE \
-	((obj), E_TYPE_SOURCE_LDAP, ESourceLDAPPrivate))
-
-struct _ESourceLDAPPrivate {
-	GMutex property_lock;
-	gboolean can_browse;
-	gchar *filter;
-	guint limit;
-	gchar *root_dn;
-	ESourceLDAPScope scope;
-
-	/* These are bound to other extensions. */
-	ESourceLDAPAuthentication authentication;
-	ESourceLDAPSecurity security;
-};
-
-enum {
-	PROP_0,
-	PROP_AUTHENTICATION,
-	PROP_CAN_BROWSE,
-	PROP_FILTER,
-	PROP_LIMIT,
-	PROP_ROOT_DN,
-	PROP_SCOPE,
-	PROP_SECURITY
-};
-
-static GType e_source_ldap_authentication_type = G_TYPE_INVALID;
-static GType e_source_ldap_scope_type = G_TYPE_INVALID;
-static GType e_source_ldap_security_type = G_TYPE_INVALID;
-
-G_DEFINE_DYNAMIC_TYPE (
-	ESourceLDAP,
-	e_source_ldap,
-	E_TYPE_SOURCE_EXTENSION)
-
-static gboolean
-source_ldap_transform_enum_nick_to_value (GBinding *binding,
-                                          const GValue *source_value,
-                                          GValue *target_value,
-                                          gpointer not_used)
-{
-	GEnumClass *enum_class;
-	GEnumValue *enum_value;
-	const gchar *string;
-	gboolean success = FALSE;
-
-	enum_class = g_type_class_peek (G_VALUE_TYPE (target_value));
-	g_return_val_if_fail (G_IS_ENUM_CLASS (enum_class), FALSE);
-
-	string = g_value_get_string (source_value);
-	enum_value = g_enum_get_value_by_nick (enum_class, string);
-	if (enum_value != NULL) {
-		g_value_set_enum (target_value, enum_value->value);
-		success = TRUE;
-	}
-
-	return success;
-}
-
-static gboolean
-source_ldap_transform_enum_value_to_nick (GBinding *binding,
-                                          const GValue *source_value,
-                                          GValue *target_value,
-                                          gpointer not_used)
-{
-	GEnumClass *enum_class;
-	GEnumValue *enum_value;
-	gint value;
-	gboolean success = FALSE;
-
-	enum_class = g_type_class_peek (G_VALUE_TYPE (source_value));
-	g_return_val_if_fail (G_IS_ENUM_CLASS (enum_class), FALSE);
-
-	value = g_value_get_enum (source_value);
-	enum_value = g_enum_get_value (enum_class, value);
-	if (enum_value != NULL) {
-		g_value_set_string (target_value, enum_value->value_nick);
-		success = TRUE;
-	}
-
-	return success;
-}
-
-static void
-source_ldap_set_property (GObject *object,
-                          guint property_id,
-                          const GValue *value,
-                          GParamSpec *pspec)
-{
-	switch (property_id) {
-		case PROP_AUTHENTICATION:
-			e_source_ldap_set_authentication (
-				E_SOURCE_LDAP (object),
-				g_value_get_enum (value));
-			return;
-
-		case PROP_CAN_BROWSE:
-			e_source_ldap_set_can_browse (
-				E_SOURCE_LDAP (object),
-				g_value_get_boolean (value));
-			return;
-
-		case PROP_FILTER:
-			e_source_ldap_set_filter (
-				E_SOURCE_LDAP (object),
-				g_value_get_string (value));
-			return;
-
-		case PROP_LIMIT:
-			e_source_ldap_set_limit (
-				E_SOURCE_LDAP (object),
-				g_value_get_uint (value));
-			return;
-
-		case PROP_ROOT_DN:
-			e_source_ldap_set_root_dn (
-				E_SOURCE_LDAP (object),
-				g_value_get_string (value));
-			return;
-
-		case PROP_SCOPE:
-			e_source_ldap_set_scope (
-				E_SOURCE_LDAP (object),
-				g_value_get_enum (value));
-			return;
-
-		case PROP_SECURITY:
-			e_source_ldap_set_security (
-				E_SOURCE_LDAP (object),
-				g_value_get_enum (value));
-			return;
-	}
-
-	G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
-}
-
-static void
-source_ldap_get_property (GObject *object,
-                          guint property_id,
-                          GValue *value,
-                          GParamSpec *pspec)
-{
-	switch (property_id) {
-		case PROP_AUTHENTICATION:
-			g_value_set_enum (
-				value,
-				e_source_ldap_get_authentication (
-				E_SOURCE_LDAP (object)));
-			return;
-
-		case PROP_CAN_BROWSE:
-			g_value_set_boolean (
-				value,
-				e_source_ldap_get_can_browse (
-				E_SOURCE_LDAP (object)));
-			return;
-
-		case PROP_FILTER:
-			g_value_take_string (
-				value,
-				e_source_ldap_dup_filter (
-				E_SOURCE_LDAP (object)));
-			return;
-
-		case PROP_LIMIT:
-			g_value_set_uint (
-				value,
-				e_source_ldap_get_limit (
-				E_SOURCE_LDAP (object)));
-			return;
-
-		case PROP_ROOT_DN:
-			g_value_take_string (
-				value,
-				e_source_ldap_dup_root_dn (
-				E_SOURCE_LDAP (object)));
-			return;
-
-		case PROP_SCOPE:
-			g_value_set_enum (
-				value,
-				e_source_ldap_get_scope (
-				E_SOURCE_LDAP (object)));
-			return;
-
-		case PROP_SECURITY:
-			g_value_set_enum (
-				value,
-				e_source_ldap_get_security (
-				E_SOURCE_LDAP (object)));
-			return;
-	}
-
-	G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
-}
-
-static void
-source_ldap_finalize (GObject *object)
-{
-	ESourceLDAPPrivate *priv;
-
-	priv = E_SOURCE_LDAP_GET_PRIVATE (object);
-
-	g_mutex_clear (&priv->property_lock);
-
-	g_free (priv->filter);
-	g_free (priv->root_dn);
-
-	/* Chain up to parent's finalize() method. */
-	G_OBJECT_CLASS (e_source_ldap_parent_class)->finalize (object);
-}
-
-static void
-source_ldap_constructed (GObject *object)
-{
-	ESource *source;
-	ESourceExtension *this_extension;
-	ESourceExtension *other_extension;
-	const gchar *extension_name;
-
-	/* Chain up to parent's method. */
-	G_OBJECT_CLASS (e_source_ldap_parent_class)->constructed (object);
-
-	this_extension = E_SOURCE_EXTENSION (object);
-	source = e_source_extension_ref_source (this_extension);
-
-	extension_name = E_SOURCE_EXTENSION_AUTHENTICATION;
-	other_extension = e_source_get_extension (source, extension_name);
-
-	e_binding_bind_property_full (
-		other_extension, "method",
-		this_extension, "authentication",
-		G_BINDING_BIDIRECTIONAL |
-		G_BINDING_SYNC_CREATE,
-		source_ldap_transform_enum_nick_to_value,
-		source_ldap_transform_enum_value_to_nick,
-		NULL, (GDestroyNotify) NULL);
-
-	extension_name = E_SOURCE_EXTENSION_SECURITY;
-	other_extension = e_source_get_extension (source, extension_name);
-
-	e_binding_bind_property_full (
-		other_extension, "method",
-		this_extension, "security",
-		G_BINDING_BIDIRECTIONAL |
-		G_BINDING_SYNC_CREATE,
-		source_ldap_transform_enum_nick_to_value,
-		source_ldap_transform_enum_value_to_nick,
-		NULL, (GDestroyNotify) NULL);
-
-	g_object_unref (source);
-}
-
-static void
-e_source_ldap_class_init (ESourceLDAPClass *class)
-{
-	GObjectClass *object_class;
-	ESourceExtensionClass *extension_class;
-
-	g_type_class_add_private (class, sizeof (ESourceLDAPPrivate));
-
-	object_class = G_OBJECT_CLASS (class);
-	object_class->set_property = source_ldap_set_property;
-	object_class->get_property = source_ldap_get_property;
-	object_class->finalize = source_ldap_finalize;
-	object_class->constructed = source_ldap_constructed;
-
-	extension_class = E_SOURCE_EXTENSION_CLASS (class);
-	extension_class->name = E_SOURCE_EXTENSION_LDAP_BACKEND;
-
-	/* This is bound to the authentication extension.
-	 * Do not use E_SOURCE_PARAM_SETTING here. */
-	g_object_class_install_property (
-		object_class,
-		PROP_AUTHENTICATION,
-		g_param_spec_enum (
-			"authentication",
-			"Authentication",
-			"LDAP authentication method",
-			E_TYPE_SOURCE_LDAP_AUTHENTICATION,
-			E_SOURCE_LDAP_AUTHENTICATION_NONE,
-			G_PARAM_READWRITE));
-
-	g_object_class_install_property (
-		object_class,
-		PROP_CAN_BROWSE,
-		g_param_spec_boolean (
-			"can-browse",
-			"Can Browse",
-			"Allow browsing contacts",
-			FALSE,
-			G_PARAM_READWRITE |
-			G_PARAM_CONSTRUCT |
-			E_SOURCE_PARAM_SETTING));
-
-	g_object_class_install_property (
-		object_class,
-		PROP_FILTER,
-		g_param_spec_string (
-			"filter",
-			"Filter",
-			"LDAP search filter",
-			"",
-			G_PARAM_READWRITE |
-			G_PARAM_CONSTRUCT |
-			E_SOURCE_PARAM_SETTING));
-
-	g_object_class_install_property (
-		object_class,
-		PROP_LIMIT,
-		g_param_spec_uint (
-			"limit",
-			"Limit",
-			"Download limit",
-			0, G_MAXUINT, 100,
-			G_PARAM_READWRITE |
-			G_PARAM_CONSTRUCT |
-			E_SOURCE_PARAM_SETTING));
-
-	g_object_class_install_property (
-		object_class,
-		PROP_ROOT_DN,
-		g_param_spec_string (
-			"root-dn",
-			"Root DN",
-			"LDAP search base",
-			"",
-			G_PARAM_READWRITE |
-			G_PARAM_CONSTRUCT |
-			E_SOURCE_PARAM_SETTING));
-
-	g_object_class_install_property (
-		object_class,
-		PROP_SCOPE,
-		g_param_spec_enum (
-			"scope",
-			"Scope",
-			"LDAP search scope",
-			E_TYPE_SOURCE_LDAP_SCOPE,
-			E_SOURCE_LDAP_SCOPE_ONELEVEL,
-			G_PARAM_READWRITE |
-			G_PARAM_CONSTRUCT |
-			E_SOURCE_PARAM_SETTING));
-
-	/* This is bound to the security extension.
-	 * Do not use E_SOURCE_PARAM_SETTING here. */
-	g_object_class_install_property (
-		object_class,
-		PROP_SECURITY,
-		g_param_spec_enum (
-			"security",
-			"Security",
-			"LDAP security method",
-			E_TYPE_SOURCE_LDAP_SECURITY,
-			E_SOURCE_LDAP_SECURITY_NONE,
-			G_PARAM_READWRITE));
-}
-
-static void
-e_source_ldap_class_finalize (ESourceLDAPClass *class)
-{
-}
-
-static void
-e_source_ldap_init (ESourceLDAP *extension)
-{
-	extension->priv = E_SOURCE_LDAP_GET_PRIVATE (extension);
-	g_mutex_init (&extension->priv->property_lock);
-}
-
-void
-e_source_ldap_type_register (GTypeModule *type_module)
-{
-	static const GEnumValue e_source_ldap_authentication_values[] = {
-		{ E_SOURCE_LDAP_AUTHENTICATION_NONE,
-		  "E_SOURCE_LDAP_AUTHENTICATION_NONE",
-		  "none" },
-		{ E_SOURCE_LDAP_AUTHENTICATION_EMAIL,
-		  "E_SOURCE_LDAP_AUTHENTICATION_EMAIL",
-		  "ldap/simple-email" },
-		{ E_SOURCE_LDAP_AUTHENTICATION_BINDDN,
-		  "E_SOURCE_LDAP_AUTHENTICATION_BINDDN",
-		  "ldap/simple-binddn" },
-		{ 0, NULL, NULL }
-	};
-
-	static const GEnumValue e_source_ldap_scope_values[] = {
-		{ E_SOURCE_LDAP_SCOPE_ONELEVEL,
-		  "E_SOURCE_LDAP_SCOPE_ONELEVEL",
-		  "onelevel" },
-		{ E_SOURCE_LDAP_SCOPE_SUBTREE,
-		  "E_SOURCE_LDAP_SCOPE_SUBTREE",
-		  "subtree" },
-		{ 0, NULL, NULL }
-	};
-
-	static const GEnumValue e_source_ldap_security_values[] = {
-		{ E_SOURCE_LDAP_SECURITY_NONE,
-		  "E_SOURCE_LDAP_SECURITY_NONE",
-		  "none" },
-		{ E_SOURCE_LDAP_SECURITY_LDAPS,
-		  "E_SOURCE_LDAP_SECURITY_LDAPS",
-		  "ldaps" },
-		{ E_SOURCE_LDAP_SECURITY_STARTTLS,
-		  "E_SOURCE_LDAP_SECURITY_STARTTLS",
-		  "starttls" },
-		{ 0, NULL, NULL }
-	};
-
-	e_source_ldap_authentication_type =
-		g_type_module_register_enum (
-		type_module, "ESourceLDAPAuthentication",
-		e_source_ldap_authentication_values);
-
-	e_source_ldap_scope_type =
-		g_type_module_register_enum (
-		type_module, "ESourceLDAPScope",
-		e_source_ldap_scope_values);
-
-	e_source_ldap_security_type =
-		g_type_module_register_enum (
-		type_module, "ESourceLDAPSecurity",
-		e_source_ldap_security_values);
-
-	/* XXX G_DEFINE_DYNAMIC_TYPE declares a static type registration
-	 *     function, so we have to wrap it with a public function in
-	 *     order to register types from a separate compilation unit. */
-	e_source_ldap_register_type (type_module);
-}
-
-ESourceLDAPAuthentication
-e_source_ldap_get_authentication (ESourceLDAP *extension)
-{
-	g_return_val_if_fail (E_IS_SOURCE_LDAP (extension), 0);
-
-	return extension->priv->authentication;
-}
-
-void
-e_source_ldap_set_authentication (ESourceLDAP *extension,
-                                  ESourceLDAPAuthentication authentication)
-{
-	g_return_if_fail (E_IS_SOURCE_LDAP (extension));
-
-	if (extension->priv->authentication == authentication)
-		return;
-
-	extension->priv->authentication = authentication;
-
-	g_object_notify (G_OBJECT (extension), "authentication");
-}
-
-gboolean
-e_source_ldap_get_can_browse (ESourceLDAP *extension)
-{
-	g_return_val_if_fail (E_IS_SOURCE_LDAP (extension), FALSE);
-
-	return extension->priv->can_browse;
-}
-
-void
-e_source_ldap_set_can_browse (ESourceLDAP *extension,
-                              gboolean can_browse)
-{
-	g_return_if_fail (E_IS_SOURCE_LDAP (extension));
-
-	if (extension->priv->can_browse == can_browse)
-		return;
-
-	extension->priv->can_browse = can_browse;
-
-	g_object_notify (G_OBJECT (extension), "can-browse");
-}
-
-const gchar *
-e_source_ldap_get_filter (ESourceLDAP *extension)
-{
-	g_return_val_if_fail (E_IS_SOURCE_LDAP (extension), NULL);
-
-	return extension->priv->filter;
-}
-
-gchar *
-e_source_ldap_dup_filter (ESourceLDAP *extension)
-{
-	const gchar *protected;
-	gchar *duplicate;
-
-	g_return_val_if_fail (E_IS_SOURCE_LDAP (extension), NULL);
-
-	g_mutex_lock (&extension->priv->property_lock);
-
-	protected = e_source_ldap_get_filter (extension);
-	duplicate = g_strdup (protected);
-
-	g_mutex_unlock (&extension->priv->property_lock);
-
-	return duplicate;
-}
-
-void
-e_source_ldap_set_filter (ESourceLDAP *extension,
-                          const gchar *filter)
-{
-	gboolean needs_parens;
-	gchar *new_filter;
-
-	g_return_if_fail (E_IS_SOURCE_LDAP (extension));
-
-	needs_parens =
-		(filter != NULL) && (*filter != '\0') &&
-		!g_str_has_prefix (filter, "(") &&
-		!g_str_has_suffix (filter, ")");
-
-	g_mutex_lock (&extension->priv->property_lock);
-
-	if (needs_parens)
-		new_filter = g_strdup_printf ("(%s)", filter);
-	else
-		new_filter = g_strdup (filter);
-
-	if (g_strcmp0 (extension->priv->filter, new_filter) == 0) {
-		g_mutex_unlock (&extension->priv->property_lock);
-		g_free (new_filter);
-		return;
-	}
-
-	g_free (extension->priv->filter);
-	extension->priv->filter = new_filter;
-
-	g_mutex_unlock (&extension->priv->property_lock);
-
-	g_object_notify (G_OBJECT (extension), "filter");
-}
-
-guint
-e_source_ldap_get_limit (ESourceLDAP *extension)
-{
-	g_return_val_if_fail (E_IS_SOURCE_LDAP (extension), 0);
-
-	return extension->priv->limit;
-}
-
-void
-e_source_ldap_set_limit (ESourceLDAP *extension,
-                         guint limit)
-{
-	g_return_if_fail (E_IS_SOURCE_LDAP (extension));
-
-	if (extension->priv->limit == limit)
-		return;
-
-	extension->priv->limit = limit;
-
-	g_object_notify (G_OBJECT (extension), "limit");
-}
-
-const gchar *
-e_source_ldap_get_root_dn (ESourceLDAP *extension)
-{
-	g_return_val_if_fail (E_IS_SOURCE_LDAP (extension), NULL);
-
-	return extension->priv->root_dn;
-}
-
-gchar *
-e_source_ldap_dup_root_dn (ESourceLDAP *extension)
-{
-	const gchar *protected;
-	gchar *duplicate;
-
-	g_return_val_if_fail (E_IS_SOURCE_LDAP (extension), NULL);
-
-	g_mutex_lock (&extension->priv->property_lock);
-
-	protected = e_source_ldap_get_root_dn (extension);
-	duplicate = g_strdup (protected);
-
-	g_mutex_unlock (&extension->priv->property_lock);
-
-	return duplicate;
-}
-
-void
-e_source_ldap_set_root_dn (ESourceLDAP *extension,
-                           const gchar *root_dn)
-{
-	g_return_if_fail (E_IS_SOURCE_LDAP (extension));
-
-	g_mutex_lock (&extension->priv->property_lock);
-
-	if (g_strcmp0 (extension->priv->root_dn, root_dn) == 0) {
-		g_mutex_unlock (&extension->priv->property_lock);
-		return;
-	}
-
-	g_free (extension->priv->root_dn);
-	extension->priv->root_dn = e_util_strdup_strip (root_dn);
-
-	g_mutex_unlock (&extension->priv->property_lock);
-
-	g_object_notify (G_OBJECT (extension), "root-dn");
-}
-
-ESourceLDAPScope
-e_source_ldap_get_scope (ESourceLDAP *extension)
-{
-	g_return_val_if_fail (E_IS_SOURCE_LDAP (extension), 0);
-
-	return extension->priv->scope;
-}
-
-void
-e_source_ldap_set_scope (ESourceLDAP *extension,
-                         ESourceLDAPScope scope)
-{
-	g_return_if_fail (E_IS_SOURCE_LDAP (extension));
-
-	if (extension->priv->scope == scope)
-		return;
-
-	extension->priv->scope = scope;
-
-	g_object_notify (G_OBJECT (extension), "scope");
-}
-
-ESourceLDAPSecurity
-e_source_ldap_get_security (ESourceLDAP *extension)
-{
-	g_return_val_if_fail (E_IS_SOURCE_LDAP (extension), 0);
-
-	return extension->priv->security;
-}
-
-void
-e_source_ldap_set_security (ESourceLDAP *extension,
-                            ESourceLDAPSecurity security)
-{
-	g_return_if_fail (E_IS_SOURCE_LDAP (extension));
-
-	if (extension->priv->security == security)
-		return;
-
-	extension->priv->security = security;
-
-	g_object_notify (G_OBJECT (extension), "security");
-}
-
-GType
-e_source_ldap_authentication_get_type (void)
-{
-	return e_source_ldap_authentication_type;
-}
-
-GType
-e_source_ldap_scope_get_type (void)
-{
-	return e_source_ldap_scope_type;
-}
-
-GType
-e_source_ldap_security_get_type (void)
-{
-	return e_source_ldap_security_type;
-}
diff --git a/modules/book-config-ldap/e-source-ldap.h b/modules/book-config-ldap/e-source-ldap.h
deleted file mode 100644
index bec3eda45f..0000000000
--- a/modules/book-config-ldap/e-source-ldap.h
+++ /dev/null
@@ -1,122 +0,0 @@
-/*
- * e-source-ldap.h
- *
- * This program is free software; you can redistribute it and/or modify it
- * under the terms of the GNU Lesser General Public License as published by
- * the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful, but
- * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
- * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
- * for more details.
- *
- * You should have received a copy of the GNU Lesser General Public License
- * along with this program; if not, see <http://www.gnu.org/licenses/>.
- *
- */
-
-#ifndef E_SOURCE_LDAP_H
-#define E_SOURCE_LDAP_H
-
-#include <libedataserver/libedataserver.h>
-
-/* Standard GObject macros */
-#define E_TYPE_SOURCE_LDAP \
-	(e_source_ldap_get_type ())
-#define E_SOURCE_LDAP(obj) \
-	(G_TYPE_CHECK_INSTANCE_CAST \
-	((obj), E_TYPE_SOURCE_LDAP, ESourceLDAP))
-#define E_SOURCE_LDAP_CLASS(cls) \
-	(G_TYPE_CHECK_CLASS_CAST \
-	((cls), E_TYPE_SOURCE_LDAP, ESourceLDAPClass))
-#define E_IS_SOURCE_LDAP(obj) \
-	(G_TYPE_CHECK_INSTANCE_TYPE \
-	((obj), E_TYPE_SOURCE_LDAP))
-#define E_IS_SOURCE_LDAP_CLASS(cls) \
-	(G_TYPE_CHECK_CLASS_TYPE \
-	((cls), E_TYPE_SOURCE_LDAP))
-#define E_SOURCE_LDAP_GET_CLASS(obj) \
-	(G_TYPE_INSTANCE_GET_CLASS \
-	((obj), E_TYPE_SOURCE_LDAP, ESourceLDAPClass))
-
-#define E_TYPE_SOURCE_LDAP_AUTHENTICATION \
-	(e_source_ldap_authentication_get_type ())
-
-#define E_TYPE_SOURCE_LDAP_SCOPE \
-	(e_source_ldap_scope_get_type ())
-
-#define E_TYPE_SOURCE_LDAP_SECURITY \
-	(e_source_ldap_security_get_type ())
-
-#define E_SOURCE_EXTENSION_LDAP_BACKEND "LDAP Backend"
-
-G_BEGIN_DECLS
-
-typedef struct _ESourceLDAP ESourceLDAP;
-typedef struct _ESourceLDAPClass ESourceLDAPClass;
-typedef struct _ESourceLDAPPrivate ESourceLDAPPrivate;
-
-struct _ESourceLDAP {
-	ESourceExtension parent;
-	ESourceLDAPPrivate *priv;
-};
-
-struct _ESourceLDAPClass {
-	ESourceExtensionClass parent_class;
-};
-
-typedef enum {
-	E_SOURCE_LDAP_AUTHENTICATION_NONE,
-	E_SOURCE_LDAP_AUTHENTICATION_EMAIL,
-	E_SOURCE_LDAP_AUTHENTICATION_BINDDN
-} ESourceLDAPAuthentication;
-
-typedef enum {
-	E_SOURCE_LDAP_SCOPE_ONELEVEL,
-	E_SOURCE_LDAP_SCOPE_SUBTREE
-} ESourceLDAPScope;
-
-typedef enum {
-	E_SOURCE_LDAP_SECURITY_NONE,
-	E_SOURCE_LDAP_SECURITY_LDAPS,
-	E_SOURCE_LDAP_SECURITY_STARTTLS
-} ESourceLDAPSecurity;
-
-GType		e_source_ldap_get_type		(void);
-void		e_source_ldap_type_register	(GTypeModule *type_module);
-ESourceLDAPAuthentication
-		e_source_ldap_get_authentication
-						(ESourceLDAP *extension);
-void		e_source_ldap_set_authentication
-						(ESourceLDAP *extension,
-						 ESourceLDAPAuthentication authentication);
-gboolean	e_source_ldap_get_can_browse	(ESourceLDAP *extension);
-void		e_source_ldap_set_can_browse	(ESourceLDAP *extension,
-						 gboolean can_browse);
-const gchar *	e_source_ldap_get_filter	(ESourceLDAP *extension);
-gchar *		e_source_ldap_dup_filter	(ESourceLDAP *extension);
-void		e_source_ldap_set_filter	(ESourceLDAP *extension,
-						 const gchar *filter);
-guint		e_source_ldap_get_limit		(ESourceLDAP *extension);
-void		e_source_ldap_set_limit		(ESourceLDAP *extension,
-						 guint limit);
-const gchar *	e_source_ldap_get_root_dn	(ESourceLDAP *extension);
-gchar *		e_source_ldap_dup_root_dn	(ESourceLDAP *extension);
-void		e_source_ldap_set_root_dn	(ESourceLDAP *extension,
-						 const gchar *root_dn);
-ESourceLDAPScope
-		e_source_ldap_get_scope		(ESourceLDAP *extension);
-void		e_source_ldap_set_scope		(ESourceLDAP *extension,
-						 ESourceLDAPScope scope);
-ESourceLDAPSecurity
-		e_source_ldap_get_security	(ESourceLDAP *extension);
-void		e_source_ldap_set_security	(ESourceLDAP *extension,
-						 ESourceLDAPSecurity security);
-
-GType		e_source_ldap_authentication_get_type	(void);
-GType		e_source_ldap_scope_get_type		(void);
-GType		e_source_ldap_security_get_type		(void);
-
-G_END_DECLS
-
-#endif /* E_SOURCE_LDAP_H */
diff --git a/modules/book-config-ldap/evolution-book-config-ldap.c b/modules/book-config-ldap/evolution-book-config-ldap.c
index e7807027ab..f67fd822b3 100644
--- a/modules/book-config-ldap/evolution-book-config-ldap.c
+++ b/modules/book-config-ldap/evolution-book-config-ldap.c
@@ -20,11 +20,10 @@
 #include <glib/gi18n-lib.h>
 
 #include <libebackend/libebackend.h>
+#include <libedataserver/libedataserver.h>
 
 #include <e-util/e-util.h>
 
-#include "e-source-ldap.h"
-
 #include <ldap.h>
 #ifndef SUNLDAP
 #include <ldap_schema.h>
@@ -992,7 +991,6 @@ e_book_config_ldap_init (ESourceConfigBackend *backend)
 G_MODULE_EXPORT void
 e_module_load (GTypeModule *type_module)
 {
-	e_source_ldap_type_register (type_module);
 	e_book_config_ldap_register_type (type_module);
 }
 
diff --git a/modules/cal-config-contacts/Makefile.am b/modules/cal-config-contacts/Makefile.am
index 2c3cc4f908..4f0ea4826a 100644
--- a/modules/cal-config-contacts/Makefile.am
+++ b/modules/cal-config-contacts/Makefile.am
@@ -12,9 +12,7 @@ module_cal_config_contacts_la_CPPFLAGS = \
 module_cal_config_contacts_la_SOURCES = \
 	evolution-cal-config-contacts.c				\
 	e-contacts-selector.c					\
-	e-contacts-selector.h					\
-	e-source-contacts.c					\
-	e-source-contacts.h
+	e-contacts-selector.h
 
 module_cal_config_contacts_la_LIBADD = \
 	$(top_builddir)/e-util/libevolution-util.la		\
diff --git a/modules/cal-config-contacts/e-contacts-selector.c b/modules/cal-config-contacts/e-contacts-selector.c
index 95468b5f3d..5972d4518f 100644
--- a/modules/cal-config-contacts/e-contacts-selector.c
+++ b/modules/cal-config-contacts/e-contacts-selector.c
@@ -15,10 +15,14 @@
  *
  */
 
+#ifdef HAVE_CONFIG_H
+#include <config.h>
+#endif
+
+#include <libedataserver/libedataserver.h>
+
 #include "e-contacts-selector.h"
 
-#include "e-source-contacts.h"
-
 G_DEFINE_DYNAMIC_TYPE (
 	EContactsSelector,
 	e_contacts_selector,
diff --git a/modules/cal-config-contacts/e-source-contacts.c b/modules/cal-config-contacts/e-source-contacts.c
deleted file mode 100644
index 3e3cd8463d..0000000000
--- a/modules/cal-config-contacts/e-source-contacts.c
+++ /dev/null
@@ -1,171 +0,0 @@
-/*
- * e-source-contacts.c
- *
- * This program is free software; you can redistribute it and/or modify it
- * under the terms of the GNU Lesser General Public License as published by
- * the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful, but
- * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
- * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
- * for more details.
- *
- * You should have received a copy of the GNU Lesser General Public License
- * along with this program; if not, see <http://www.gnu.org/licenses/>.
- *
- */
-
-#include "e-source-contacts.h"
-
-#define E_SOURCE_CONTACTS_GET_PRIVATE(obj) \
-	(G_TYPE_INSTANCE_GET_PRIVATE \
-	((obj), E_TYPE_SOURCE_CONTACTS, ESourceContactsPrivate))
-
-struct _ESourceContactsPrivate {
-	gboolean include_me;
-};
-
-enum {
-	PROP_0,
-	PROP_INCLUDE_ME
-};
-
-G_DEFINE_DYNAMIC_TYPE (
-	ESourceContacts,
-	e_source_contacts,
-	E_TYPE_SOURCE_EXTENSION)
-
-static void
-source_contacts_set_property (GObject *object,
-                              guint property_id,
-                              const GValue *value,
-                              GParamSpec *pspec)
-{
-	switch (property_id) {
-		case PROP_INCLUDE_ME:
-			e_source_contacts_set_include_me (
-				E_SOURCE_CONTACTS (object),
-				g_value_get_boolean (value));
-			return;
-	}
-
-	G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
-}
-
-static void
-source_contacts_get_property (GObject *object,
-                              guint property_id,
-                              GValue *value,
-                              GParamSpec *pspec)
-{
-	switch (property_id) {
-		case PROP_INCLUDE_ME:
-			g_value_set_boolean (
-				value,
-				e_source_contacts_get_include_me (
-				E_SOURCE_CONTACTS (object)));
-			return;
-	}
-
-	G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
-}
-
-static void
-source_contacts_constructed (GObject *object)
-{
-	ESource *source;
-	ESourceExtension *extension;
-	ESourceBackend *backend_extension;
-	ESourceContacts *contacts_extension;
-	const gchar *backend_name;
-	const gchar *extension_name;
-	gboolean include_me;
-
-	/* Chain up to parent's constructed() method. */
-	G_OBJECT_CLASS (e_source_contacts_parent_class)->constructed (object);
-
-	extension = E_SOURCE_EXTENSION (object);
-	source = e_source_extension_ref_source (extension);
-
-	extension_name = E_SOURCE_EXTENSION_ADDRESS_BOOK;
-	backend_extension = e_source_get_extension (source, extension_name);
-	backend_name = e_source_backend_get_backend_name (backend_extension);
-
-	/* Only include local address books by default. */
-	include_me = (g_strcmp0 (backend_name, "local") == 0);
-
-	contacts_extension = E_SOURCE_CONTACTS (extension);
-	e_source_contacts_set_include_me (contacts_extension, include_me);
-
-	g_object_unref (source);
-}
-
-static void
-e_source_contacts_class_init (ESourceContactsClass *class)
-{
-	GObjectClass *object_class;
-	ESourceExtensionClass *extension_class;
-
-	g_type_class_add_private (class, sizeof (ESourceContactsPrivate));
-
-	object_class = G_OBJECT_CLASS (class);
-	object_class->set_property = source_contacts_set_property;
-	object_class->get_property = source_contacts_get_property;
-	object_class->constructed = source_contacts_constructed;
-
-	extension_class = E_SOURCE_EXTENSION_CLASS (class);
-	extension_class->name = E_SOURCE_EXTENSION_CONTACTS_BACKEND;
-
-	g_object_class_install_property (
-		object_class,
-		PROP_INCLUDE_ME,
-		g_param_spec_boolean (
-			"include-me",
-			"Include Me",
-			"Include this address book in the contacts calendar",
-			FALSE,  /* see constructed () */
-			G_PARAM_READWRITE |
-			E_SOURCE_PARAM_SETTING));
-}
-
-static void
-e_source_contacts_class_finalize (ESourceContactsClass *class)
-{
-}
-
-static void
-e_source_contacts_init (ESourceContacts *extension)
-{
-	extension->priv = E_SOURCE_CONTACTS_GET_PRIVATE (extension);
-}
-
-void
-e_source_contacts_type_register (GTypeModule *type_module)
-{
-	/* XXX G_DEFINE_DYNAMIC_TYPE declares a static type registration
-	 *     function, so we have to wrap it with a public function in
-	 *     order to register types from a separate compilation unit. */
-	e_source_contacts_register_type (type_module);
-}
-
-gboolean
-e_source_contacts_get_include_me (ESourceContacts *extension)
-{
-	g_return_val_if_fail (E_IS_SOURCE_CONTACTS (extension), FALSE);
-
-	return extension->priv->include_me;
-}
-
-void
-e_source_contacts_set_include_me (ESourceContacts *extension,
-                                  gboolean include_me)
-{
-	g_return_if_fail (E_IS_SOURCE_CONTACTS (extension));
-
-	if (extension->priv->include_me == include_me)
-		return;
-
-	extension->priv->include_me = include_me;
-
-	g_object_notify (G_OBJECT (extension), "include-me");
-}
diff --git a/modules/cal-config-contacts/e-source-contacts.h b/modules/cal-config-contacts/e-source-contacts.h
deleted file mode 100644
index e98de536fc..0000000000
--- a/modules/cal-config-contacts/e-source-contacts.h
+++ /dev/null
@@ -1,69 +0,0 @@
-/*
- * e-source-contacts.h
- *
- * This program is free software; you can redistribute it and/or modify it
- * under the terms of the GNU Lesser General Public License as published by
- * the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful, but
- * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
- * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
- * for more details.
- *
- * You should have received a copy of the GNU Lesser General Public License
- * along with this program; if not, see <http://www.gnu.org/licenses/>.
- *
- */
-
-#ifndef E_SOURCE_CONTACTS_H
-#define E_SOURCE_CONTACTS_H
-
-#include <libedataserver/libedataserver.h>
-
-/* Standard GObject macros */
-#define E_TYPE_SOURCE_CONTACTS \
-	(e_source_contacts_get_type ())
-#define E_SOURCE_CONTACTS(obj) \
-	(G_TYPE_CHECK_INSTANCE_CAST \
-	((obj), E_TYPE_SOURCE_CONTACTS, ESourceContacts))
-#define E_SOURCE_CONTACTS_CLASS(cls) \
-	(G_TYPE_CHECK_CLASS_CAST \
-	((cls), E_TYPE_SOURCE_CONTACTS, ESourceContactsClass))
-#define E_IS_SOURCE_CONTACTS(obj) \
-	(G_TYPE_CHECK_INSTANCE_TYPE \
-	((obj), E_TYPE_SOURCE_CONTACTS))
-#define E_IS_SOURCE_CONTACTS_CLASS(cls) \
-	(G_TYPE_CHECK_CLASS_TYPE \
-	((cls), E_TYPE_SOURCE_CONTACTS))
-#define E_SOURCE_CONTACTS_GET_CLASS(obj) \
-	(G_TYPE_INSTANCE_GET_CLASS \
-	((obj), E_TYPE_SOURCE_CONTACTS, ESourceContactsClass))
-
-#define E_SOURCE_EXTENSION_CONTACTS_BACKEND "Contacts Backend"
-
-G_BEGIN_DECLS
-
-typedef struct _ESourceContacts ESourceContacts;
-typedef struct _ESourceContactsClass ESourceContactsClass;
-typedef struct _ESourceContactsPrivate ESourceContactsPrivate;
-
-struct _ESourceContacts {
-	ESourceExtension parent;
-	ESourceContactsPrivate *priv;
-};
-
-struct _ESourceContactsClass {
-	ESourceExtensionClass parent_class;
-};
-
-GType		e_source_contacts_get_type	(void);
-void		e_source_contacts_type_register	(GTypeModule *type_module);
-gboolean	e_source_contacts_get_include_me
-						(ESourceContacts *extension);
-void		e_source_contacts_set_include_me
-						(ESourceContacts *extension,
-						 gboolean include_me);
-
-G_END_DECLS
-
-#endif /* E_SOURCE_CONTACTS_H */
diff --git a/modules/cal-config-contacts/evolution-cal-config-contacts.c b/modules/cal-config-contacts/evolution-cal-config-contacts.c
index 032b6fc58b..290d421957 100644
--- a/modules/cal-config-contacts/evolution-cal-config-contacts.c
+++ b/modules/cal-config-contacts/evolution-cal-config-contacts.c
@@ -19,11 +19,11 @@
 #include <glib/gi18n-lib.h>
 
 #include <libebackend/libebackend.h>
+#include <libedataserver/libedataserver.h>
 
 #include <e-util/e-util.h>
 
 #include "e-contacts-selector.h"
-#include "e-source-contacts.h"
 
 /* This file contains two extension classes: an ESourceConfigBackend
  * for "contacts" calendars and an EExtension for EBookSourceConfig. */
@@ -243,7 +243,6 @@ void e_module_unload (GTypeModule *type_module);
 G_MODULE_EXPORT void
 e_module_load (GTypeModule *type_module)
 {
-	e_source_contacts_type_register (type_module);
 	e_contacts_selector_type_register (type_module);
 
 	e_cal_config_contacts_register_type (type_module);
diff --git a/modules/cal-config-local/Makefile.am b/modules/cal-config-local/Makefile.am
index c503a02734..a9a76152b5 100644
--- a/modules/cal-config-local/Makefile.am
+++ b/modules/cal-config-local/Makefile.am
@@ -10,9 +10,7 @@ module_cal_config_local_la_CPPFLAGS = \
 	$(NULL)
 
 module_cal_config_local_la_SOURCES = \
-	evolution-cal-config-local.c				\
-	e-source-local.c					\
-	e-source-local.h
+	evolution-cal-config-local.c
 
 module_cal_config_local_la_LIBADD = \
 	$(top_builddir)/e-util/libevolution-util.la		\
diff --git a/modules/cal-config-local/e-source-local.c b/modules/cal-config-local/e-source-local.c
deleted file mode 100644
index 62c573657b..0000000000
--- a/modules/cal-config-local/e-source-local.c
+++ /dev/null
@@ -1,202 +0,0 @@
-/*
- * e-source-local.c
- *
- * This program is free software; you can redistribute it and/or modify it
- * under the terms of the GNU Lesser General Public License as published by
- * the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful, but
- * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
- * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
- * for more details.
- *
- * You should have received a copy of the GNU Lesser General Public License
- * along with this program; if not, see <http://www.gnu.org/licenses/>.
- *
- */
-
-#include "e-source-local.h"
-
-#define E_SOURCE_LOCAL_GET_PRIVATE(obj) \
-	(G_TYPE_INSTANCE_GET_PRIVATE \
-	((obj), E_TYPE_SOURCE_LOCAL, ESourceLocalPrivate))
-
-struct _ESourceLocalPrivate {
-	GMutex property_lock;
-	GFile *custom_file;
-};
-
-enum {
-	PROP_0,
-	PROP_CUSTOM_FILE
-};
-
-G_DEFINE_DYNAMIC_TYPE (
-	ESourceLocal,
-	e_source_local,
-	E_TYPE_SOURCE_EXTENSION)
-
-static void
-source_local_set_property (GObject *object,
-                           guint property_id,
-                           const GValue *value,
-                           GParamSpec *pspec)
-{
-	switch (property_id) {
-		case PROP_CUSTOM_FILE:
-			e_source_local_set_custom_file (
-				E_SOURCE_LOCAL (object),
-				g_value_get_object (value));
-			return;
-	}
-
-	G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
-}
-
-static void
-source_local_get_property (GObject *object,
-                           guint property_id,
-                           GValue *value,
-                           GParamSpec *pspec)
-{
-	switch (property_id) {
-		case PROP_CUSTOM_FILE:
-			g_value_take_object (
-				value,
-				e_source_local_dup_custom_file (
-				E_SOURCE_LOCAL (object)));
-			return;
-	}
-
-	G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
-}
-
-static void
-source_local_dispose (GObject *object)
-{
-	ESourceLocalPrivate *priv;
-
-	priv = E_SOURCE_LOCAL_GET_PRIVATE (object);
-
-	if (priv->custom_file != NULL) {
-		g_object_unref (priv->custom_file);
-		priv->custom_file = NULL;
-	}
-
-	/* Chain up to parent's dispose() method. */
-	G_OBJECT_CLASS (e_source_local_parent_class)->dispose (object);
-}
-
-static void
-source_local_finalize (GObject *object)
-{
-	ESourceLocalPrivate *priv;
-
-	priv = E_SOURCE_LOCAL_GET_PRIVATE (object);
-
-	g_mutex_clear (&priv->property_lock);
-
-	/* Chain up to parent's finalize() method. */
-	G_OBJECT_CLASS (e_source_local_parent_class)->finalize (object);
-}
-
-static void
-e_source_local_class_init (ESourceLocalClass *class)
-{
-	GObjectClass *object_class;
-	ESourceExtensionClass *extension_class;
-
-	g_type_class_add_private (class, sizeof (ESourceLocalPrivate));
-
-	object_class = G_OBJECT_CLASS (class);
-	object_class->set_property = source_local_set_property;
-	object_class->get_property = source_local_get_property;
-	object_class->dispose = source_local_dispose;
-	object_class->finalize = source_local_finalize;
-
-	extension_class = E_SOURCE_EXTENSION_CLASS (class);
-	extension_class->name = E_SOURCE_EXTENSION_LOCAL_BACKEND;
-
-	g_object_class_install_property (
-		object_class,
-		PROP_CUSTOM_FILE,
-		g_param_spec_object (
-			"custom-file",
-			"Custom File",
-			"Custom iCalendar file",
-			G_TYPE_FILE,
-			G_PARAM_READWRITE |
-			G_PARAM_CONSTRUCT |
-			E_SOURCE_PARAM_SETTING));
-}
-
-static void
-e_source_local_class_finalize (ESourceLocalClass *class)
-{
-}
-
-static void
-e_source_local_init (ESourceLocal *extension)
-{
-	extension->priv = E_SOURCE_LOCAL_GET_PRIVATE (extension);
-	g_mutex_init (&extension->priv->property_lock);
-}
-
-void
-e_source_local_type_register (GTypeModule *type_module)
-{
-	/* XXX G_DEFINE_DYNAMIC_TYPE declares a static type registration
-	 *     function, so we have to wrap it with a public function in
-	 *     order to register types from a separate compilation unit. */
-	e_source_local_register_type (type_module);
-}
-
-GFile *
-e_source_local_get_custom_file (ESourceLocal *extension)
-{
-	g_return_val_if_fail (E_IS_SOURCE_LOCAL (extension), NULL);
-
-	return extension->priv->custom_file;
-}
-
-GFile *
-e_source_local_dup_custom_file (ESourceLocal *extension)
-{
-	GFile *protected;
-	GFile *duplicate;
-
-	g_return_val_if_fail (E_IS_SOURCE_LOCAL (extension), NULL);
-
-	g_mutex_lock (&extension->priv->property_lock);
-
-	protected = e_source_local_get_custom_file (extension);
-	duplicate = (protected != NULL) ? g_file_dup (protected) : NULL;
-
-	g_mutex_unlock (&extension->priv->property_lock);
-
-	return duplicate;
-}
-
-void
-e_source_local_set_custom_file (ESourceLocal *extension,
-                                GFile *custom_file)
-{
-	g_return_if_fail (E_IS_SOURCE_LOCAL (extension));
-
-	if (custom_file != NULL) {
-		g_return_if_fail (G_IS_FILE (custom_file));
-		g_object_ref (custom_file);
-	}
-
-	g_mutex_lock (&extension->priv->property_lock);
-
-	if (extension->priv->custom_file != NULL)
-		g_object_unref (extension->priv->custom_file);
-
-	extension->priv->custom_file = custom_file;
-
-	g_mutex_unlock (&extension->priv->property_lock);
-
-	g_object_notify (G_OBJECT (extension), "custom-file");
-}
-
diff --git a/modules/cal-config-local/e-source-local.h b/modules/cal-config-local/e-source-local.h
deleted file mode 100644
index e91b894ef0..0000000000
--- a/modules/cal-config-local/e-source-local.h
+++ /dev/null
@@ -1,68 +0,0 @@
-/*
- * e-source-local.h
- *
- * This program is free software; you can redistribute it and/or modify it
- * under the terms of the GNU Lesser General Public License as published by
- * the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful, but
- * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
- * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
- * for more details.
- *
- * You should have received a copy of the GNU Lesser General Public License
- * along with this program; if not, see <http://www.gnu.org/licenses/>.
- *
- */
-
-#ifndef E_SOURCE_LOCAL_H
-#define E_SOURCE_LOCAL_H
-
-#include <libedataserver/libedataserver.h>
-
-/* Standard GObject macros */
-#define E_TYPE_SOURCE_LOCAL \
-	(e_source_local_get_type ())
-#define E_SOURCE_LOCAL(obj) \
-	(G_TYPE_CHECK_INSTANCE_CAST \
-	((obj), E_TYPE_SOURCE_LOCAL, ESourceLocal))
-#define E_SOURCE_LOCAL_CLASS(cls) \
-	(G_TYPE_CHECK_CLASS_CAST \
-	((cls), E_TYPE_SOURCE_LOCAL, ESourceLocalClass))
-#define E_IS_SOURCE_LOCAL(obj) \
-	(G_TYPE_CHECK_INSTANCE_TYPE \
-	((obj), E_TYPE_SOURCE_LOCAL))
-#define E_IS_SOURCE_LOCAL_CLASS(cls) \
-	(G_TYPE_CHECK_CLASS_TYPE \
-	((cls), E_TYPE_SOURCE_LOCAL))
-#define E_SOURCE_LOCAL_GET_CLASS(obj) \
-	(G_TYPE_INSTANCE_GET_CLASS \
-	((obj), E_TYPE_SOURCE_LOCAL, ESourceLocalClass))
-
-#define E_SOURCE_EXTENSION_LOCAL_BACKEND "Local Backend"
-
-G_BEGIN_DECLS
-
-typedef struct _ESourceLocal ESourceLocal;
-typedef struct _ESourceLocalClass ESourceLocalClass;
-typedef struct _ESourceLocalPrivate ESourceLocalPrivate;
-
-struct _ESourceLocal {
-	ESourceExtension parent;
-	ESourceLocalPrivate *priv;
-};
-
-struct _ESourceLocalClass {
-	ESourceExtensionClass parent_class;
-};
-
-GType		e_source_local_get_type		(void);
-void		e_source_local_type_register	(GTypeModule *type_module);
-GFile *		e_source_local_get_custom_file	(ESourceLocal *extension);
-GFile *		e_source_local_dup_custom_file	(ESourceLocal *extension);
-void		e_source_local_set_custom_file	(ESourceLocal *extension,
-						 GFile *custom_file);
-
-G_END_DECLS
-
-#endif /* E_SOURCE_LOCAL_H */
diff --git a/modules/cal-config-local/evolution-cal-config-local.c b/modules/cal-config-local/evolution-cal-config-local.c
index ecfcb4183b..eb9edf75f4 100644
--- a/modules/cal-config-local/evolution-cal-config-local.c
+++ b/modules/cal-config-local/evolution-cal-config-local.c
@@ -19,11 +19,10 @@
 #include <glib/gi18n-lib.h>
 
 #include <libebackend/libebackend.h>
+#include <libedataserver/libedataserver.h>
 
 #include <e-util/e-util.h>
 
-#include "e-source-local.h"
-
 typedef ESourceConfigBackend ECalConfigLocal;
 typedef ESourceConfigBackendClass ECalConfigLocalClass;
 
@@ -294,7 +293,6 @@ e_cal_config_local_init (ESourceConfigBackend *backend)
 G_MODULE_EXPORT void
 e_module_load (GTypeModule *type_module)
 {
-	e_source_local_type_register (type_module);
 	e_cal_config_local_register_type (type_module);
 }
 
diff --git a/modules/cal-config-weather/Makefile.am b/modules/cal-config-weather/Makefile.am
index 54c4850393..7f93b38e22 100644
--- a/modules/cal-config-weather/Makefile.am
+++ b/modules/cal-config-weather/Makefile.am
@@ -11,9 +11,7 @@ module_cal_config_weather_la_CPPFLAGS = \
 	$(NULL)
 
 module_cal_config_weather_la_SOURCES = \
-	evolution-cal-config-weather.c				\
-	e-source-weather.c					\
-	e-source-weather.h
+	evolution-cal-config-weather.c
 
 module_cal_config_weather_la_LIBADD = \
 	$(top_builddir)/e-util/libevolution-util.la		\
diff --git a/modules/cal-config-weather/e-source-weather.c b/modules/cal-config-weather/e-source-weather.c
deleted file mode 100644
index d8695c353c..0000000000
--- a/modules/cal-config-weather/e-source-weather.c
+++ /dev/null
@@ -1,260 +0,0 @@
-/*
- * e-source-weather.c
- *
- * This program is free software; you can redistribute it and/or modify it
- * under the terms of the GNU Lesser General Public License as published by
- * the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful, but
- * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
- * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
- * for more details.
- *
- * You should have received a copy of the GNU Lesser General Public License
- * along with this program; if not, see <http://www.gnu.org/licenses/>.
- *
- */
-
-#include "e-source-weather.h"
-
-#define E_SOURCE_WEATHER_GET_PRIVATE(obj) \
-	(G_TYPE_INSTANCE_GET_PRIVATE \
-	((obj), E_TYPE_SOURCE_WEATHER, ESourceWeatherPrivate))
-
-struct _ESourceWeatherPrivate {
-	GMutex property_lock;
-	ESourceWeatherUnits units;
-	gchar *location;
-};
-
-enum {
-	PROP_0,
-	PROP_LOCATION,
-	PROP_UNITS
-};
-
-static GType e_source_weather_units_type = G_TYPE_INVALID;
-
-G_DEFINE_DYNAMIC_TYPE (
-	ESourceWeather,
-	e_source_weather,
-	E_TYPE_SOURCE_EXTENSION)
-
-static void
-source_weather_set_property (GObject *object,
-                             guint property_id,
-                             const GValue *value,
-                             GParamSpec *pspec)
-{
-	switch (property_id) {
-		case PROP_LOCATION:
-			e_source_weather_set_location (
-				E_SOURCE_WEATHER (object),
-				g_value_get_string (value));
-			return;
-
-		case PROP_UNITS:
-			e_source_weather_set_units (
-				E_SOURCE_WEATHER (object),
-				g_value_get_enum (value));
-			return;
-	}
-
-	G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
-}
-
-static void
-source_weather_get_property (GObject *object,
-                             guint property_id,
-                             GValue *value,
-                             GParamSpec *pspec)
-{
-	switch (property_id) {
-		case PROP_LOCATION:
-			g_value_take_string (
-				value,
-				e_source_weather_dup_location (
-				E_SOURCE_WEATHER (object)));
-			return;
-
-		case PROP_UNITS:
-			g_value_set_enum (
-				value,
-				e_source_weather_get_units (
-				E_SOURCE_WEATHER (object)));
-			return;
-	}
-
-	G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
-}
-
-static void
-source_weather_finalize (GObject *object)
-{
-	ESourceWeatherPrivate *priv;
-
-	priv = E_SOURCE_WEATHER_GET_PRIVATE (object);
-
-	g_mutex_clear (&priv->property_lock);
-
-	g_free (priv->location);
-
-	/* Chain up to parent's finalize() method. */
-	G_OBJECT_CLASS (e_source_weather_parent_class)->finalize (object);
-}
-
-static void
-e_source_weather_class_init (ESourceWeatherClass *class)
-{
-	GObjectClass *object_class;
-	ESourceExtensionClass *extension_class;
-
-	g_type_class_add_private (class, sizeof (ESourceWeatherPrivate));
-
-	object_class = G_OBJECT_CLASS (class);
-	object_class->set_property = source_weather_set_property;
-	object_class->get_property = source_weather_get_property;
-	object_class->finalize = source_weather_finalize;
-
-	extension_class = E_SOURCE_EXTENSION_CLASS (class);
-	extension_class->name = E_SOURCE_EXTENSION_WEATHER_BACKEND;
-
-	g_object_class_install_property (
-		object_class,
-		PROP_LOCATION,
-		g_param_spec_string (
-			"location",
-			"Location",
-			"Weather location code",
-			NULL,
-			G_PARAM_READWRITE |
-			G_PARAM_CONSTRUCT |
-			E_SOURCE_PARAM_SETTING));
-
-	g_object_class_install_property (
-		object_class,
-		PROP_UNITS,
-		g_param_spec_enum (
-			"units",
-			"Units",
-			"Fahrenheit, Centigrade or Kelvin units",
-			E_TYPE_SOURCE_WEATHER_UNITS,
-			E_SOURCE_WEATHER_UNITS_CENTIGRADE,
-			G_PARAM_READWRITE |
-			G_PARAM_CONSTRUCT |
-			E_SOURCE_PARAM_SETTING));
-}
-
-static void
-e_source_weather_class_finalize (ESourceWeatherClass *class)
-{
-}
-
-static void
-e_source_weather_init (ESourceWeather *extension)
-{
-	extension->priv = E_SOURCE_WEATHER_GET_PRIVATE (extension);
-	g_mutex_init (&extension->priv->property_lock);
-}
-
-void
-e_source_weather_type_register (GTypeModule *type_module)
-{
-	static const GEnumValue e_source_weather_units_values[] = {
-		{ E_SOURCE_WEATHER_UNITS_FAHRENHEIT,
-		  "E_SOURCE_WEATHER_UNITS_FAHRENHEIT",
-		  "fahrenheit" },
-		{ E_SOURCE_WEATHER_UNITS_CENTIGRADE,
-		  "E_SOURCE_WEATHER_UNITS_CENTIGRADE",
-		  "centigrade" },
-		{ E_SOURCE_WEATHER_UNITS_KELVIN,
-		  "E_SOURCE_WEATHER_UNITS_KELVIN",
-		  "kelvin" },
-		{ 0, NULL, NULL }
-	};
-
-	e_source_weather_units_type =
-		g_type_module_register_enum (
-		type_module, "ESourceWeatherUnits",
-		e_source_weather_units_values);
-
-	/* XXX G_DEFINE_DYNAMIC_TYPE declares a static type registration
-	 *     function, so we have to wrap it with a public function in
-	 *     order to register types from a separate compilation unit. */
-	e_source_weather_register_type (type_module);
-}
-
-const gchar *
-e_source_weather_get_location (ESourceWeather *extension)
-{
-	g_return_val_if_fail (E_IS_SOURCE_WEATHER (extension), NULL);
-
-	return extension->priv->location;
-}
-
-gchar *
-e_source_weather_dup_location (ESourceWeather *extension)
-{
-	const gchar *protected;
-	gchar *duplicate;
-
-	g_return_val_if_fail (E_IS_SOURCE_WEATHER (extension), NULL);
-
-	g_mutex_lock (&extension->priv->property_lock);
-
-	protected = e_source_weather_get_location (extension);
-	duplicate = g_strdup (protected);
-
-	g_mutex_unlock (&extension->priv->property_lock);
-
-	return duplicate;
-}
-
-void
-e_source_weather_set_location (ESourceWeather *extension,
-                               const gchar *location)
-{
-	g_return_if_fail (E_IS_SOURCE_WEATHER (extension));
-
-	g_mutex_lock (&extension->priv->property_lock);
-
-	if (g_strcmp0 (extension->priv->location, location) == 0) {
-		g_mutex_unlock (&extension->priv->property_lock);
-		return;
-	}
-
-	g_free (extension->priv->location);
-	extension->priv->location = e_util_strdup_strip (location);
-
-	g_mutex_unlock (&extension->priv->property_lock);
-
-	g_object_notify (G_OBJECT (extension), "location");
-}
-
-ESourceWeatherUnits
-e_source_weather_get_units (ESourceWeather *extension)
-{
-	g_return_val_if_fail (E_IS_SOURCE_WEATHER (extension), 0);
-
-	return extension->priv->units;
-}
-
-void
-e_source_weather_set_units (ESourceWeather *extension,
-                            ESourceWeatherUnits units)
-{
-	g_return_if_fail (E_IS_SOURCE_WEATHER (extension));
-
-	if (extension->priv->units == units)
-		return;
-
-	extension->priv->units = units;
-
-	g_object_notify (G_OBJECT (extension), "units");
-}
-
-GType
-e_source_weather_units_get_type (void)
-{
-	return e_source_weather_units_type;
-}
diff --git a/modules/cal-config-weather/e-source-weather.h b/modules/cal-config-weather/e-source-weather.h
deleted file mode 100644
index 0a8b5bff5f..0000000000
--- a/modules/cal-config-weather/e-source-weather.h
+++ /dev/null
@@ -1,83 +0,0 @@
-/*
- * e-source-weather.h
- *
- * This program is free software; you can redistribute it and/or modify it
- * under the terms of the GNU Lesser General Public License as published by
- * the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful, but
- * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
- * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
- * for more details.
- *
- * You should have received a copy of the GNU Lesser General Public License
- * along with this program; if not, see <http://www.gnu.org/licenses/>.
- *
- */
-
-#ifndef E_SOURCE_WEATHER_H
-#define E_SOURCE_WEATHER_H
-
-#include <libedataserver/libedataserver.h>
-
-/* Standard GObject macros */
-#define E_TYPE_SOURCE_WEATHER \
-	(e_source_weather_get_type ())
-#define E_SOURCE_WEATHER(obj) \
-	(G_TYPE_CHECK_INSTANCE_CAST \
-	((obj), E_TYPE_SOURCE_WEATHER, ESourceWeather))
-#define E_SOURCE_WEATHER_CLASS(cls) \
-	(G_TYPE_CHECK_CLASS_CAST \
-	((cls), E_TYPE_SOURCE_WEATHER, ESourceWeatherClass))
-#define E_IS_SOURCE_WEATHER(obj) \
-	(G_TYPE_CHECK_INSTANCE_TYPE \
-	((obj), E_TYPE_SOURCE_WEATHER))
-#define E_IS_SOURCE_WEATHER_CLASS(cls) \
-	(G_TYPE_CHECK_CLASS_TYPE \
-	((cls), E_TYPE_SOURCE_WEATHER))
-#define E_SOURCE_WEATHER_GET_CLASS(obj) \
-	(G_TYPE_INSTANCE_GET_CLASS \
-	((obj), E_TYPE_SOURCE_WEATHER, ESourceWeatherClass))
-
-#define E_TYPE_SOURCE_WEATHER_UNITS \
-	(e_source_weather_units_get_type ())
-
-#define E_SOURCE_EXTENSION_WEATHER_BACKEND "Weather Backend"
-
-G_BEGIN_DECLS
-
-typedef struct _ESourceWeather ESourceWeather;
-typedef struct _ESourceWeatherClass ESourceWeatherClass;
-typedef struct _ESourceWeatherPrivate ESourceWeatherPrivate;
-
-struct _ESourceWeather {
-	ESourceExtension parent;
-	ESourceWeatherPrivate *priv;
-};
-
-struct _ESourceWeatherClass {
-	ESourceExtensionClass parent_class;
-};
-
-typedef enum {
-	E_SOURCE_WEATHER_UNITS_FAHRENHEIT = 0,
-	E_SOURCE_WEATHER_UNITS_CENTIGRADE,
-	E_SOURCE_WEATHER_UNITS_KELVIN
-} ESourceWeatherUnits;
-
-GType		e_source_weather_get_type	(void);
-void		e_source_weather_type_register	(GTypeModule *type_module);
-const gchar *	e_source_weather_get_location	(ESourceWeather *extension);
-gchar *		e_source_weather_dup_location	(ESourceWeather *extension);
-void		e_source_weather_set_location	(ESourceWeather *extension,
-						 const gchar *location);
-ESourceWeatherUnits
-		e_source_weather_get_units	(ESourceWeather *extension);
-void		e_source_weather_set_units	(ESourceWeather *extension,
-						 ESourceWeatherUnits units);
-
-GType		e_source_weather_units_get_type		(void);
-
-G_END_DECLS
-
-#endif /* E_SOURCE_WEATHER_H */
diff --git a/modules/cal-config-weather/evolution-cal-config-weather.c b/modules/cal-config-weather/evolution-cal-config-weather.c
index 12a4925a9b..89b6d2a380 100644
--- a/modules/cal-config-weather/evolution-cal-config-weather.c
+++ b/modules/cal-config-weather/evolution-cal-config-weather.c
@@ -19,6 +19,7 @@
 #include <glib/gi18n-lib.h>
 
 #include <libebackend/libebackend.h>
+#include <libedataserver/libedataserver.h>
 
 #define GWEATHER_I_KNOW_THIS_IS_UNSTABLE
 #include <libgweather/location-entry.h>
@@ -26,8 +27,6 @@
 
 #include <e-util/e-util.h>
 
-#include "e-source-weather.h"
-
 #if HAVE_NL_LANGINFO
 #include <langinfo.h>
 #endif
@@ -345,7 +344,6 @@ e_cal_config_weather_init (ESourceConfigBackend *backend)
 G_MODULE_EXPORT void
 e_module_load (GTypeModule *type_module)
 {
-	e_source_weather_type_register (type_module);
 	e_cal_config_weather_register_type (type_module);
 }
 
-- 
2.15.0

